{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      notes: []\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote(note) {\n      try {\n        const response = await axios.post(`${backendUrl}/api/notes-spa`, note);\n        this.notes.push(response.data);\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    },\n    async updateNote(updatedNote) {\n      try {\n        const response = await axios.put(`${backendUrl}/api/notes-spa/${updatedNote.idNote}`, updatedNote);\n        const index = this.notes.findIndex(note => note.idNote === updatedNote.idNote);\n        this.notes.splice(index, 1, response.data);\n      } catch (error) {\n        console.error('Error updating note:', error);\n      }\n    },\n    async getNotesByCategory(category) {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa/${category}`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching notes by category:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["backendUrl","axios","data","notes","mounted","getNotes","methods","response","get","error","console","createNote","note","post","push","updateNote","updatedNote","put","idNote","index","findIndex","splice","getNotesByCategory","category"],"sources":["C:\\Users\\ricar\\Downloads\\Java-Otros\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <ul>\n      <li v-for=\"note in notes\" :key=\"note.idNote\">\n        <h2>{{ note.title }}</h2>\n        <p>{{ note.description }}</p>\n        <ul>\n          <li v-for=\"category in note.categories\" :key=\"category.idCategory\">\n            {{ category.nameCategory }}\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      notes: [],\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote(note) {\n      try {\n        const response = await axios.post(`${backendUrl}/api/notes-spa`, note);\n        this.notes.push(response.data);\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    },\n    async updateNote(updatedNote) {\n    try {\n      const response = await axios.put(`${backendUrl}/api/notes-spa/${updatedNote.idNote}`, updatedNote);\n      const index = this.notes.findIndex(note => note.idNote === updatedNote.idNote);\n      this.notes.splice(index, 1, response.data);\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  },\n    async getNotesByCategory(category) {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa/${category}`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching notes by category:', error);\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";AAiBA,SAASA,UAAS,QAAS,aAAa;AACxC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAME,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAER,UAAW,gBAAe,CAAC;QAC/D,IAAI,CAACG,KAAI,GAAII,QAAQ,CAACL,IAAI;MAC5B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,IAAI,EAAE;MACrB,IAAI;QACF,MAAML,QAAO,GAAI,MAAMN,KAAK,CAACY,IAAI,CAAE,GAAEb,UAAW,gBAAe,EAAEY,IAAI,CAAC;QACtE,IAAI,CAACT,KAAK,CAACW,IAAI,CAACP,QAAQ,CAACL,IAAI,CAAC;MAChC,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMM,UAAUA,CAACC,WAAW,EAAE;MAC9B,IAAI;QACF,MAAMT,QAAO,GAAI,MAAMN,KAAK,CAACgB,GAAG,CAAE,GAAEjB,UAAW,kBAAiBgB,WAAW,CAACE,MAAO,EAAC,EAAEF,WAAW,CAAC;QAClG,MAAMG,KAAI,GAAI,IAAI,CAAChB,KAAK,CAACiB,SAAS,CAACR,IAAG,IAAKA,IAAI,CAACM,MAAK,KAAMF,WAAW,CAACE,MAAM,CAAC;QAC9E,IAAI,CAACf,KAAK,CAACkB,MAAM,CAACF,KAAK,EAAE,CAAC,EAAEZ,QAAQ,CAACL,IAAI,CAAC;MAC5C,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACC,MAAMa,kBAAkBA,CAACC,QAAQ,EAAE;MACjC,IAAI;QACF,MAAMhB,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAER,UAAW,kBAAiBuB,QAAS,EAAC,CAAC;QAC3E,IAAI,CAACpB,KAAI,GAAII,QAAQ,CAACL,IAAI;MAC5B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}