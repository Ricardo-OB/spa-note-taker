{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notes, note => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: note.idNote\n    }, [_createElementVNode(\"h2\", null, _toDisplayString(note.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(note.description), 1 /* TEXT */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(note.categories, category => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: category.idCategory\n      }, _toDisplayString(category.nameCategory), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","notes","note","key","idNote","_toDisplayString","title","description","categories","category","idCategory","nameCategory"],"sources":["C:\\Users\\ricar\\Downloads\\Java-Otros\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <ul>\n      <li v-for=\"note in notes\" :key=\"note.idNote\">\n        <h2>{{ note.title }}</h2>\n        <p>{{ note.description }}</p>\n        <ul>\n          <li v-for=\"category in note.categories\" :key=\"category.idCategory\">\n            {{ category.nameCategory }}\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      notes: [],\n      categories: [],\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote(note) {\n      try {\n        const response = await axios.post(`${backendUrl}/api/notes-spa`, note);\n        this.notes.push(response.data);\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    },\n    async updateNote(updatedNote) {\n      try {\n        const response = await axios.put(`${backendUrl}/api/notes-spa/${updatedNote.idNote}`, updatedNote);\n        const index = this.notes.findIndex(note => note.idNote === updatedNote.idNote);\n        this.notes.splice(index, 1, response.data);\n      } catch (error) {\n        console.error('Error updating note:', error);\n      }\n    },\n    async getNotesByCategory(category) {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa/${category}`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching notes by category:', error);\n      }\n    },\n    async deleteNote(id) {\n      try {\n        await axios.delete(`${backendUrl}/api/notes-spa/${id}`);\n        this.notes = this.notes.filter(note => note.idNote !== id);\n      } catch (error) {\n        console.error('Error deleting note:', error);\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAYM,cAXJC,mBAAA,CAUK,c,kBATHD,mBAAA,CAQKE,SAAA,QAAAC,WAAA,CARcC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAQK;MARsBO,GAAG,EAAED,IAAI,CAACE;QACnCP,mBAAA,CAAyB,YAAAQ,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBT,mBAAA,CAA6B,WAAAQ,gBAAA,CAAvBH,IAAI,CAACK,WAAW,kBACtBV,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFkBG,IAAI,CAACM,UAAU,EAA3BC,QAAQ;2BAAnBb,mBAAA,CAEK;QAFoCO,GAAG,EAAEM,QAAQ,CAACC;0BAClDD,QAAQ,CAACE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}