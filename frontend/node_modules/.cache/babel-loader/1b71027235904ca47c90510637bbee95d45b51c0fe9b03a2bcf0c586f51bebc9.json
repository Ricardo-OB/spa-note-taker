{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      notes: [],\n      newNote: {\n        title: '',\n        description: '',\n        categories: ''\n      }\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote() {\n      try {\n        // Dividir las categorías por comas y crear un array de objetos\n        const categoriesArray = this.newNote.categories.split(',').map(category => ({\n          nameCategory: category.trim()\n        }));\n\n        // Construir el objeto de nota\n        const noteData = {\n          title: this.newNote.title,\n          description: this.newNote.description,\n          categories: categoriesArray\n        };\n\n        // Enviar la solicitud para crear la nota\n        const response = await axios.post(`${backendUrl}/api/notes-spa`, noteData);\n\n        // Agregar la nueva nota a la lista\n        this.notes.push(response.data);\n\n        // Limpiar el formulario después de crear la nota\n        this.newNote = {\n          title: '',\n          description: '',\n          categories: ''\n        };\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    }\n  },\n  watch: {\n    selectedCategory() {\n      this.getNotes();\n    }\n  }\n};","map":{"version":3,"names":["backendUrl","axios","data","notes","newNote","title","description","categories","mounted","getNotes","methods","response","get","error","console","createNote","categoriesArray","split","map","category","nameCategory","trim","noteData","post","push","watch","selectedCategory"],"sources":["C:\\Users\\ricar\\Downloads\\Java-Otros\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>HelloWorld Component</h1>\n    \n    <!-- Mostrar todas las notas -->\n    <ul>\n      <li v-for=\"note in notes\" :key=\"note.idNote\">\n        <h2>{{ note.title }}</h2>\n        <p>{{ note.description }}</p>\n        <ul>\n          <li v-for=\"category in note.categories\" :key=\"category.idCategory\">\n            {{ category.nameCategory }}\n          </li>\n        </ul>\n      </li>\n    </ul>\n\n    <!-- Agregar formulario para crear una nueva nota -->\n    <form @submit.prevent=\"createNote\">\n      <h2>Nueva Nota</h2>\n      <label for=\"title\">Título:</label>\n      <input v-model=\"newNote.title\" type=\"text\" required>\n      <label for=\"description\">Descripción:</label>\n      <textarea v-model=\"newNote.description\" required></textarea>\n      <label for=\"categories\">Categorías (Separadas por comas):</label>\n      <input v-model=\"newNote.categories\" type=\"text\" required>\n      <button type=\"submit\">Guardar</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      notes: [],\n      newNote: {\n        title: '',\n        description: '',\n        categories: '',\n      },\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote() {\n      try {\n        // Dividir las categorías por comas y crear un array de objetos\n        const categoriesArray = this.newNote.categories.split(',').map(category => ({ nameCategory: category.trim() }));\n\n        // Construir el objeto de nota\n        const noteData = {\n          title: this.newNote.title,\n          description: this.newNote.description,\n          categories: categoriesArray,\n        };\n\n        // Enviar la solicitud para crear la nota\n        const response = await axios.post(`${backendUrl}/api/notes-spa`, noteData);\n\n        // Agregar la nueva nota a la lista\n        this.notes.push(response.data);\n\n        // Limpiar el formulario después de crear la nota\n        this.newNote = {\n          title: '',\n          description: '',\n          categories: '',\n        };\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    },\n  },\n  watch: {\n    selectedCategory() {\n      this.getNotes();\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";AAgCA,SAASA,UAAS,QAAS,aAAa;AACxC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;QACPC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE;MACd;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAME,QAAO,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAE,GAAEZ,UAAW,gBAAe,CAAC;QAC/D,IAAI,CAACG,KAAI,GAAIQ,QAAQ,CAACT,IAAI;MAC5B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,eAAc,GAAI,IAAI,CAACZ,OAAO,CAACG,UAAU,CAACU,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,QAAO,KAAM;UAAEC,YAAY,EAAED,QAAQ,CAACE,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;;QAE/G;QACA,MAAMC,QAAO,GAAI;UACfjB,KAAK,EAAE,IAAI,CAACD,OAAO,CAACC,KAAK;UACzBC,WAAW,EAAE,IAAI,CAACF,OAAO,CAACE,WAAW;UACrCC,UAAU,EAAES;QACd,CAAC;;QAED;QACA,MAAML,QAAO,GAAI,MAAMV,KAAK,CAACsB,IAAI,CAAE,GAAEvB,UAAW,gBAAe,EAAEsB,QAAQ,CAAC;;QAE1E;QACA,IAAI,CAACnB,KAAK,CAACqB,IAAI,CAACb,QAAQ,CAACT,IAAI,CAAC;;QAE9B;QACA,IAAI,CAACE,OAAM,GAAI;UACbC,KAAK,EAAE,EAAE;UACTC,WAAW,EAAE,EAAE;UACfC,UAAU,EAAE;QACd,CAAC;MACH,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EACDY,KAAK,EAAE;IACLC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACjB,QAAQ,CAAC,CAAC;IACjB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}