{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      notes: [],\n      newNote: {\n        title: '',\n        description: '',\n        categories: ''\n      },\n      editNote: {\n        idNote: null,\n        title: '',\n        description: '',\n        categories: []\n      }\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    showDynamicComponentModalWithModalParams() {\n      let counter = 0;\n      const interval = setInterval(() => {\n        if (counter === 5) {\n          clearInterval(interval);\n        } else {\n          counter++;\n        }\n        const name = `dynamic-modal-${Math.random()}`;\n        this.$modal.show({\n          template: `\n              <div class=\"example-modal-content\">\n                <h2>{{ name }}</h2>\n                <button class=\"btn\" @click=\"closeByName\">Close using name</button>\n                <button class=\"btn\" @click=\"closeByEvent\">Close using events</button>\n                <button class=\"btn\" @click=\"this.$modal.hideAll\">Close all dynamic modals</button>\n              </div>\n            `,\n          props: ['name'],\n          methods: {\n            closeByName() {\n              this.$modal.hide(name);\n            },\n            closeByEvent() {\n              this.$emit('close');\n            }\n          }\n        }, {\n          name\n        }, {\n          name,\n          height: 'auto'\n        });\n      }, 300);\n    },\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote() {\n      try {\n        const categoriesArray = this.newNote.categories.split(',').map(category => ({\n          nameCategory: category.trim()\n        }));\n        const noteData = JSON.stringify({\n          title: this.newNote.title,\n          description: this.newNote.description,\n          categories: categoriesArray\n        });\n        const response = await axios.post(`${backendUrl}/api/notes-spa`, noteData, {\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        this.notes.push(response.data);\n        this.newNote = {\n          title: '',\n          description: '',\n          categories: ''\n        };\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    },\n    openEditDialog(note) {\n      this.editNote = {\n        ...note\n      }; // Clonar la nota para evitar modificaciones directas\n      this.$modal.show('edit-modal');\n    },\n    saveEdit() {\n      // Lógica para enviar la solicitud de edición al backend\n      // Similar al método createNote\n      this.$modal.hide('edit-modal');\n    },\n    async deleteNote(noteId) {\n      try {\n        await axios.delete(`${backendUrl}/api/notes-spa/${noteId}`);\n        // Filtrar las notas para excluir la eliminada\n        this.notes = this.notes.filter(note => note.idNote !== noteId);\n      } catch (error) {\n        console.error('Error deleting note:', error);\n      }\n    }\n  },\n  watch: {\n    selectedCategory() {\n      this.getNotes();\n    }\n  }\n};","map":{"version":3,"names":["backendUrl","axios","data","notes","newNote","title","description","categories","editNote","idNote","mounted","getNotes","methods","showDynamicComponentModalWithModalParams","counter","interval","setInterval","clearInterval","name","Math","random","$modal","show","template","props","closeByName","hide","closeByEvent","$emit","height","response","get","error","console","createNote","categoriesArray","split","map","category","nameCategory","trim","noteData","JSON","stringify","post","headers","push","openEditDialog","note","saveEdit","deleteNote","noteId","delete","filter","watch","selectedCategory"],"sources":["C:\\Users\\ricar\\Downloads\\Java-Otros\\frontend\\src\\components\\HelloWorld.vue"],"sourcesContent":["<!-- <script src=\"https://unpkg.com/vue-js-modal@2.0.1/dist/vue-js-modal.min.js\"></script> -->\n\n<template>\n  <demo-login-modal />\n\n  <v-dialog\n      @before-opened=\"dialogEvent('before-open')\"\n      @before-closed=\"dialogEvent('before-close')\"\n      @opened=\"dialogEvent('opened')\"\n      @closed=\"dialogEvent('closed')\"\n    />\n\n  <div>\n    <h1>Notes. {{ msg }}</h1>\n    \n    <!-- Agregar formulario para crear una nueva nota -->\n    <form @submit.prevent=\"createNote\">\n      <h2>Nueva Nota</h2>\n      <label for=\"title\">Título:</label>\n      <input v-model=\"newNote.title\" type=\"text\" required>\n      <label for=\"description\">Descripción:</label>\n      <textarea v-model=\"newNote.description\" required></textarea>\n      <label for=\"categories\">Categorías (Separadas por comas):</label>\n      <input v-model=\"newNote.categories\" type=\"text\" required>\n      <button type=\"submit\">Guardar</button>\n    </form>\n    \n    <!-- Mostrar todas las notas -->\n    <ul>\n      <li v-for=\"note in notes\" :key=\"note.idNote\">\n        <h2>{{ note.title }}</h2>\n        <p>{{ note.description }}</p>\n        <ul>\n          <li v-for=\"category in note.categories\" :key=\"category.idCategory\">\n            {{ category.nameCategory }}\n          </li>\n        </ul>\n        <p>{{ note.createdAt }}</p>\n        <button class=\"btn green\" @click=\"$modal.show('demo-login')\">Demo: Login</button>\n        <button class=\"btn\" @click=\"showDynamicComponentModalWithModalParams\">Dynamic</button>\n        <button @click=\"openEditDialog(note)\">Editar</button>\n        <button @click=\"deleteNote(note.idNote)\">Eliminar</button>\n      </li>\n    </ul>\n\n  </div>\n</template>\n\n<script>\nimport { backendUrl } from '@/config.js';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      notes: [],\n      newNote: {\n        title: '',\n        description: '',\n        categories: '',\n      },\n      editNote: {\n        idNote: null,\n        title: '',\n        description: '',\n        categories: [],\n      },\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    showDynamicComponentModalWithModalParams() {\n      let counter = 0\n\n      const interval = setInterval(() => {\n        if (counter === 5) {\n          clearInterval(interval)\n        } else {\n          counter++\n        }\n\n        const name = `dynamic-modal-${Math.random()}`\n\n        this.$modal.show(\n          {\n            template: `\n              <div class=\"example-modal-content\">\n                <h2>{{ name }}</h2>\n                <button class=\"btn\" @click=\"closeByName\">Close using name</button>\n                <button class=\"btn\" @click=\"closeByEvent\">Close using events</button>\n                <button class=\"btn\" @click=\"this.$modal.hideAll\">Close all dynamic modals</button>\n              </div>\n            `,\n            props: ['name'],\n            methods: {\n              closeByName() {\n                this.$modal.hide(name)\n              },\n              closeByEvent() {\n                this.$emit('close')\n              }\n            }\n          },\n          { name },\n          { name, height: 'auto' }\n        )\n      }, 300)\n    },\n    async getNotes() {\n      try {\n        const response = await axios.get(`${backendUrl}/api/notes-spa`);\n        this.notes = response.data;\n      } catch (error) {\n        console.error('Error fetching all notes:', error);\n      }\n    },\n    async createNote() {\n      try {\n        const categoriesArray = this.newNote.categories.split(',').map(category => ({ nameCategory: category.trim() }))\n        const noteData = JSON.stringify({\n          title: this.newNote.title,\n          description: this.newNote.description,\n          categories: categoriesArray,\n        });\n        \n        const response = await axios.post(`${backendUrl}/api/notes-spa`,\n                                          noteData,\n                                          {headers: {'Content-Type': 'application/json', 'Accept': 'application/json'}}\n                                          );\n\n        this.notes.push(response.data);\n\n        this.newNote = {\n          title: '',\n          description: '',\n          categories: '',\n        };\n      } catch (error) {\n        console.error('Error creating note:', error);\n      }\n    },\n    openEditDialog(note) {\n      this.editNote = { ...note }; // Clonar la nota para evitar modificaciones directas\n      this.$modal.show('edit-modal');\n    },\n    saveEdit() {\n      // Lógica para enviar la solicitud de edición al backend\n      // Similar al método createNote\n      this.$modal.hide('edit-modal');\n    },\n    async deleteNote(noteId) {\n      try {\n        await axios.delete(`${backendUrl}/api/notes-spa/${noteId}`);\n        // Filtrar las notas para excluir la eliminada\n        this.notes = this.notes.filter(note => note.idNote !== noteId);\n      } catch (error) {\n        console.error('Error deleting note:', error);\n      }\n    },\n  },\n  watch: {\n    selectedCategory() {\n      this.getNotes();\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\nbody {\n  margin: 0;\n  padding: 100px 50px;\n  padding-bottom: 0;\n  width: 100%;\n  min-height: 100vh;\n  background: #fc00aa;\n  background: -webkit-linear-gradient(to right, #fc00aa, #00dbde);\n  background: linear-gradient(315deg, #fc00aa, #00dbde);\n  cursor: default;\n}\npre {\n  color: #595959;\n  background-color: #f3f3f3;\n  border: 1px solid #eee;\n}\n#app {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #6b7c93;\n  background: #f6f9fc;\n  padding: 20px;\n  border-radius: 3px;\n  box-shadow: 0 4px 36px rgba(50, 50, 93, 0.11), 0 1px 33px rgba(0, 0, 0, 0.08);\n}\nh1, h2 {\n  font-weight: normal;\n}\nh1 a, h2 a {\n  font-size: 12px;\n}\na {\n  color: inherit;\n}\nbutton.btn {\n  outline: none;\n  background: white;\n  border: 0;\n  padding: 10px 18px;\n  cursor: pointer;\n  border-radius: 3px;\n  color: white;\n  box-shadow: 0 4px 8px rgba(32, 160, 255, 0.3);\n  background: #4db3ff;\n  font-weight: 600;\n  border-radius: 3px;\n  min-width: 90px;\n  margin-bottom: 8px;\n  margin-top: 8px;\n  margin-right: 8px;\n}\nbutton.btn:hover {\n  background: #20a0ff;\n}\nbutton.btn.green {\n  box-shadow: 0 4px 8px rgba(80, 201, 186, 0.3);\n  background: #50c9ba;\n}\nbutton.btn.green:hover {\n  background: #4cbfb1;\n}\nbutton.btn.red {\n  box-shadow: 0 4px 8px rgba(242, 19, 104, 0.3);\n  background: #f21368;\n}\nbutton.btn.red:hover {\n  background: #e61263;\n}\n.example-modal-content {\n  box-sizing: border-box;\n  padding: 10px;\n  font-size: 13px;\n  line-height: 1.5;\n  overflow: auto;\n}\n\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}